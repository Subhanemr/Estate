<!DOCTYPE html>
<html lang="en" class="wide wow-animation">

<head>
    <!-- Site Title-->
    <title>Estate</title>
    <meta name="format-detection" content="telephone=no">
    <meta name="viewport" content="width=device-width,height=device-height,initial-scale=1,maximum-scale=1,user-scalable=0">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta charset="utf-8">
    <link rel="icon" href="~/assets/images/favicon.ico" type="image/x-icon">
    <!-- Stylesheets-->
    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Lato:400,700,900,400italic">
    <link rel="stylesheet" href="~/assets/css/style.css">
    <!--[if lt IE 10]><div style="background: #212121; padding: 10px 0; box-shadow: 3px 3px 5px 0 rgba(0,0,0,.3); clear: both; text-align:center; position: relative; z-index:1;"><a href="http://windows.microsoft.com/en-US/internet-explorer/"><img src="images/ie8-panel/warning_bar_0000_us.jpg" border="0" height="42" width="820" alt="You are using an outdated browser. For a faster, safer browsing experience, upgrade for free today."></a></div><script src="~/assests/js/html5shiv.min.js"></script><![endif]-->
</head>

<body>
    <!-- Page-->
    <div class="page">
        @await Html.PartialAsync("Header/_HeaderPartialView")
        @RenderBody()
        @await Html.PartialAsync("Footer/_FooterPartialView")
    </div>
    <!-- Global Mailform Output-->
    <div id="form-output-global" class="snackbars"></div>
    <!-- PhotoSwipe Gallery-->
    <div tabindex="-1" role="dialog" aria-hidden="true" class="pswp">
        <div class="pswp__bg"></div>
        <div class="pswp__scroll-wrap">
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    <div class="pswp__counter"></div>
                    <button title="Close (Esc)" class="pswp__button pswp__button--close"></button>
                    <button title="Share" class="pswp__button pswp__button--share"></button>
                    <button title="Toggle fullscreen" class="pswp__button pswp__button--fs"></button>
                    <button title="Zoom in/out" class="pswp__button pswp__button--zoom"></button>
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button title="Previous (arrow left)" class="pswp__button pswp__button--arrow--left"></button>
                <button title="Next (arrow right)" class="pswp__button pswp__button--arrow--right"></button>
                <div class="pswp__caption">
                    <div class="pswp__caption__cent"></div>
                </div>
            </div>
        </div>
    </div>
    <!-- Java script-->
    <script src="~/assets/js/favorite.js"></script>
    <script src="~/assets/js/message.js"></script>
    <script src="~/assets/js/comment.js"></script>
    <script src="~/assets/js/core.min.js"></script>
    <script src="~/assets/js/script.js"></script>
    @RenderSection("DeleteImages",false)
    @* @RenderSection("Favorite",false) *@

    <script>

        let wishlistCounters = document.querySelector('.wishlistcounter')
        async function handleDeleteButtonClick(button) {
            let wishlistCard = button.closest(".wishlist_card");
            let id = button.id;
            await fetch(`https://localhost:7093/Favorite/DeleteItem/${id}`)
            if (wishlistCard) {
                wishlistCard.remove();
                    let currentValue = parseInt(wishlistCounters.innerText, 10);

                    if (!isNaN(currentValue)) {
                        wishlistCounters.innerText = currentValue - 1;
                    } else {
                        console.error('Invalid number found in wishlistcounter span:', wishlistCounters.innerText);
                    }
                
            }
        }
        async function AddWishlistButton(button) {
            let id = button.id;

            const wishlistResponse = await fetch('https://localhost:7093/Favorite/WishListJson');
            const wishlistData = await wishlistResponse.json();

            // Check if the item with the given ID is already in the wishlist
            if (wishlistData.some(item => item.id === id)) {
                console.log(`Item with ID ${id} is already in the wishlist. Skipping increment.`);
                return; // Exit the function without making the fetch request
            }

            // If the item is not in the wishlist, proceed with the fetch request
            await fetch(`https://localhost:7093/Favorite/AddWishList/${id}`);

            const response = await fetch('https://localhost:7093/Favorite/WishListJson');
            const afterData = await response.json();

            // Update the wishlist counters only if the item.id is not equal to the provided 
            console.log(afterData)
                if (afterData.some(item => item.id !== id)) {
                    wishlistCounters.innerText = afterData.length;
                } else {
                    console.error('Invalid number found in wishlistcounter span:', wishlistCounters.innerText);
                }
            
        }          
    </script>

</body>

</html>