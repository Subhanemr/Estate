@model GetProductVM

<!-- Section Title Breadcrumbs-->
<section class="section-full text-left">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <h1>Single Property Page</h1>
                <p></p>
                <ol class="breadcrumb">
                    <li>
                        <a asp-action="Index" asp-controller="Home">Home</a>
                    </li>
                    <li>
                        <a asp-action="Index" asp-controller="Product" asp-route-returnUrl="@ViewData["ReturnUrl"]">Catalog</a>
                    </li>
                    <li class="active">@Model.Name</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<!-- Section Catalog Single Left-->
<section class="bg-dark section-sm section-sm-mod-1 text-left">
    <div class="container">
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="row flow-offset-7">
            <div class="col-xs-12 col-sm-6 col-md-3">
                <p>Agent</p>
                <a asp-action="Agent" asp-controller="Agency" asp-route-id="@Model.ProductUser.Id" class="h5 text-sushi text-regular">@Model.ProductUser.Name @Model.ProductUser.Surname</a>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">
                <p>Location</p>
                <p class="h5 text-regular">@Model.Address</p>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-2 col-lg-offset-1">
                <p>Price</p>
                <p class="thumbnail-price h5">
                    $@Model.Price
                    <span class="mon text-regular">/@Model.OrderDayOrMoth</span>
                </p>
            </div>
        </div>
    </div>
</section>
<section class="section-sm section-sm-mod-2 text-left">
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-8">
                <!-- Slick Carousel-->
                <div data-arrows="true" data-loop="false" data-dots="false" data-swipe="true" data-xs-items="1" data-photo-swipe-gallery="gallery" data-child="#child-carousel" data-for=".thumbnail-carousel" class="slick-slider carousel-parent">
                    @foreach (var image in Model.Images)
                    {
                        <a data-photo-swipe-item="" data-size="1200x743" href="@image.Url" class="item">
                            <img src="@image.Url" style="width: 770px; height: 513px;" alt="" width="770" height="513">
                        </a>
                    }
                </div>
                <div id="child-carousel" data-for=".carousel-parent" data-arrows="true" data-loop="false" data-dots="false" data-swipe="true" data-items="2" data-xs-items="4" data-sm-items="4" data-md-items="5" data-lg-items="5" data-slide-to-scroll="1" class="slick-slider thumbnail-carousel">
                    @foreach (var image in Model.Images)
                    {
                        <div class="item">
                            <div class="product-thumbnail">
                                <img src="@image.Url" alt="@Model.Name" style="width:130px; height:86px;" width="130" height="86">
                            </div>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <h4 class="border-bottom">Overview</h4>
                        <div class="table-mobile offset-11">
                            <table class="table table-default">
                                <tbody>
                                    <tr>
                                        <td>Area</td>
                                        <td>@Model.Area sq ft</td>
                                    </tr>
                                    <tr>
                                        <td>Bedrooms</td>
                                        <td>@Model.Bedrooms</td>
                                    </tr>
                                    <tr>
                                        <td>Bathrooms</td>
                                        <td>@Model.Bathrooms</td>
                                    </tr>
                                    <tr>
                                        <td>Garages</td>
                                        <td>@Model.Garages</td>
                                    </tr>
                                    <tr>
                                        <td>Features</td>
                                        <td>
                                            @foreach (var features in Model.Features)
                                            {
                                                @features.Name

                                                @(features != Model.Features[Model.Features.Count - 1] ? ", " : "")
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>Year Built</td>
                                        <td>@Model.YearBuilt</td>
                                    </tr>
                                    <tr>
                                        <td>Lot Size</td>
                                        <td>@Model.LotSize</td>
                                    </tr>
                                    @if (!string.IsNullOrWhiteSpace(Model.SchoolDistrict))
                                    {
                                        <tr>
                                            <td>School District</td>
                                            <td>@Model.SchoolDistrict @Model.SchoolDistrictPhone</td>
                                        </tr>
                                        if (Model.HighSchool)
                                        {
                                            <tr>
                                                <td>High School</td>
                                                <td>Call School District</td>
                                            </tr>
                                        }
                                        if (Model.MiddleSchool)
                                        {
                                            <tr>
                                                <td>Middle School</td>
                                                <td>Call School District</td>
                                            </tr>
                                        }
                                        if (Model.ElementarySchool)
                                        {
                                            <tr>
                                                <td>Elementary School</td>
                                                <td>Call School District</td>
                                            </tr>
                                        }
                                    }

                                    <tr>
                                        <td>Parking Type</td>
                                        <td>
                                            @foreach (var parkingTypes in Model.ParkingTypes)
                                            {
                                                @parkingTypes.Name

                                                @(parkingTypes != Model.ParkingTypes[Model.ParkingTypes.Count - 1] ? ", " : "")
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>Room Count</td>
                                        <td>@Model.RoomCount</td>
                                    </tr>
                                    <tr>
                                        <td>Roof Type</td>
                                        <td>
                                            @foreach (var roofTypes in Model.RoofTypes)
                                            {
                                                @roofTypes.Name

                                                @(roofTypes != Model.RoofTypes[Model.RoofTypes.Count - 1] ? ", " : "")
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>View Type</td>
                                        <td>
                                            @foreach (var viewTypes in Model.ViewTypes)
                                            {
                                                @viewTypes.Name

                                                @(viewTypes != Model.ViewTypes[Model.ViewTypes.Count - 1] ? ", " : "")
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>Exterior Type</td>
                                        <td>
                                            @foreach (var exteriorTypes in Model.ExteriorTypes)
                                            {
                                                @exteriorTypes.Name

                                                @(exteriorTypes != Model.ExteriorTypes[Model.ExteriorTypes.Count - 1] ? ", " : "")
                                            }
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <h4 class="border-bottom offset-8">Description</h4>
                        <p>
                            @{
                                for (int i = 0; i < Model.Description.Length; i += 123)
                                {
                                    int remainingLength = Math.Min(123, Model.Description.Length - i);
                                    string substring = Model.Description.Substring(i, remainingLength);

                                    @Html.Raw(substring)

                                    if (i + remainingLength < Model.Description.Length)
                                    {
                                        <br>
                                    }
                                }
                            }
                        </p>
                        <h4 class="border-bottom offset-8">Comments</h4>
                        @{
                            await Html.RenderPartialAsync("ProductComment/_ProductCommentPartialView", Model);
                        }
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-4">
                <div class="sidebar sidebar-mod-1">
                    <div class="sidebar-module">
                        <h4 class="border-bottom">Request a Showing</h4>
                        <p>You can contact us any way that is convenient for you. We would be happy to answer your questions.</p>
                        <!-- RD Mailform-->
                        @{
                            await Html.RenderPartialAsync("ProductAgentMessage/_ProductAgentMessagePartialView", Model.Id);
                        }
                    </div>
                    <div class="sidebar-module">
                        <h4 class="border-bottom">Agent Information</h4>
                        <div class="media media-mod-3">
                            <div class="media-left img-width-auto">
                                <img src="@Model.ProductUser.Img" alt="@Model.ProductUser.Name" style="width:100px;height:100px; border-radius: 7px;" width="100" height="100">
                            </div>
                            <div class="media-body">
                                <h5 class="text-sushi">@Model.ProductUser.Name @Model.ProductUser.Surname</h5>
                                <dl class="dl-horizontal-mod-1 text-ubold text-abbey">
                                    <dt>tel.</dt>
                                    <dd>
                                        <a href="@Model.ProductUser.PhoneNumber">@Model.ProductUser.PhoneNumber</a>
                                    </dd>
                                </dl>
                            </div>
                        </div>
                        <p>@(Model.ProductUser.About.Length > 44 ? Model.ProductUser.About.Substring(0, 44) + " ..." : Model.ProductUser.About)</p>
                        <a asp-action="Agent" asp-controller="Agency" asp-route-id="@Model.ProductUser.Id" class="btn btn-primary btn-sm">get in touch</a>
                    </div>
                    <div class="sidebar-module">
                        <h4 class="border-bottom">Share</h4>
                        <div class="icon-group">
                            <a href="@Model.FaceLink" class="icon icon-sm icon-social fa-facebook"></a>
                            <a href="@Model.TwitLink" class="icon icon-sm icon-social fa-twitter"></a>
                            @if (!string.IsNullOrWhiteSpace(Model.GoogleLink))
                            {
                                <a href="@Model.GoogleLink" class="icon icon-sm icon-social fa-google-plus"></a>
                            }
                        </div>
                    </div>
                    <div class="sidebar-module">
                        <h4>Recent Properties</h4>
                        @await Component.InvokeAsync("DetailProducts", Model)
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>